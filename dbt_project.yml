# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'Analytics'
version: '1.2.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  +copy_grants: true
  Analytics:
    staging:
      +schema: staging
      +materialized: view
    production:
      business:
        +materialized: table
        +database: "{{ env_var('DBT_DB') }}"
        +schema: "{{ 'commercial' if env_var('DBT__ENV') == 'PROD' else 'dev' }}"     
      commercial:
        +materialized: table
        +database: "{{ env_var('DBT_DB') }}"
        +schema: "{{ 'commercial' if env_var('DBT__ENV') == 'PROD' else 'dev' }}" 
      finance:
        +materialized: table
        +database: "{{ env_var('DBT_DB') }}"
        +schema: "{{ 'commercial' if env_var('DBT__ENV') == 'PROD' else 'dev' }}"  
      instrumentruns:
        +materialized: table
        +database: "{{ env_var('DBT_DB') }}"
        +schema: "{{ 'commercial' if env_var('DBT__ENV') == 'PROD' else 'dev' }}"  
      instruments:
        +materialized: table
        +database: "{{ env_var('DBT_DB') }}"
        +schema: "{{ 'commercial' if env_var('DBT__ENV') == 'PROD' else 'dev' }}"  
      manufacturing:
        +materialized: table
        +database: "{{ env_var('DBT_DB') }}"
        +schema: "{{ 'commercial' if env_var('DBT__ENV') == 'PROD' else 'dev' }}"  
      operations:
        +materialized: table
        +database: "{{ env_var('DBT_DB') }}"
        +schema: "{{ 'commercial' if env_var('DBT__ENV') == 'PROD' else 'dev' }}"  
      Q42:
        +materialized: view
        +database: "{{ env_var('DBT_DB') }}"
        +schema: "{{ 'commercial' if env_var('DBT__ENV') == 'PROD' else 'dev' }}"
      quality:
        +materialized: table
        +database: "{{ env_var('DBT_DB') }}"
        +schema: "{{ 'commercial' if env_var('DBT__ENV') == 'PROD' else 'dev' }}"  
      service:
        +materialized: table
        +database: "{{ env_var('DBT_DB') }}"
        +schema: "{{ 'commercial' if env_var('DBT__ENV') == 'PROD' else 'dev' }}"  
    admin:
      +database: "{{ env_var('DBT_DB') }}"
      +schema: "{{ 'admin' if env_var('DBT__ENV') == 'PROD' else 'dev' }}" 
    tests:
      +schema: marts
      +materialized: view

on-run-end: "{{ log_dbt_results(results) }}"
